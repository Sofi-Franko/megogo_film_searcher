{"version":3,"sources":["api/index.js","components/login/index.js","components/homepage/index.js","App.js","reportWebVitals.js","index.js"],"names":["login","a","email","password","fetch","method","body","JSON","stringify","headers","then","response","ok","Error","status","json","catch","err","console","log","Login","onLoginSuccessful","useState","setEmail","setPassword","hasError","setHasError","onSubmit","event","preventDefault","loginResult","name","token","localStorage","setItem","Container","Card","className","Header","as","Body","Form","Group","controlId","Label","Control","type","placeholder","onChange","target","value","Text","Alert","variant","Button","Homepage","onLogout","fluid","App","isUserSignedIn","setIsUserSignedIn","useEffect","getItem","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96953fc7.chunk.js","sourcesContent":["export async function login({ email, password }) {\n  return await fetch(\"/api/auth/login\", {\n    method: \"POST\",\n    body: JSON.stringify({ email, password }),\n    headers: { \"Content-Type\": \"application/json\" },\n  })\n    .then((response) => {\n      // If request is not successful, display error message\n      if (!response.ok) {\n        throw new Error(\"HTTP status \" + response.status);\n      }\n\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nexport async function searchFilms({ keyword }) {\n  return await fetch(`/api/homepage/getArtworks/${keyword}`, {\n    method: \"GET\",\n    headers: { \"Content-Type\": \"application/json\" },\n  })\n    .then((response) => {\n      // If request is not successful, display error message\n      if (!response.ok) {\n        throw new Error(\"HTTP status \" + response.status);\n      }\n\n      return response.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n","import React, { useState } from \"react\";\nimport { Container, Form, Button, Alert, Card } from \"react-bootstrap\";\nimport { login } from \"../../api\";\n\nfunction Login({ onLoginSuccessful }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n\n  const onEmailChange = (event) => setEmail(event.target.value);\n  const onPasswordChange = (event) => setPassword(event.target.value);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    setHasError(false);\n    const loginResult = await login({ email, password });\n    if (!loginResult) setHasError(true);\n    else {\n      const { name, token } = loginResult;\n      // Save user IDs on local storage\n      localStorage.setItem(\"name\", name);\n      localStorage.setItem(\"token\", token);\n      onLoginSuccessful();\n    }\n  };\n\n  return (\n    <Container>\n      <Card className=\"mt-5\">\n        <Card.Header as=\"h1\">Login</Card.Header>\n        <Card.Body>\n          <Form className=\"w-100\" onSubmit={onSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={onEmailChange}\n                value={email}\n              />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={onPasswordChange}\n                value={password}\n              />\n            </Form.Group>\n            {hasError && (\n              <Alert variant={\"danger\"}>\n                The email address and password you entered don't match any\n                account. Please try again.\n              </Alert>\n            )}\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Login;\n","// import React, { useState } from \"react\";\nimport {\n  Container,\n  // Row,\n  // Form,\n  // Button,\n  // Alert,\n  // InputGroup,\n  // Spinner,\n  // CardColumns,\n  // Card,\n} from \"react-bootstrap\";\n// import { searchFilms } from \"../../api\";\n\nconsole.log(`the-------------------> test`)\nfunction Homepage({ onLogout }) {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [noArtworksFound, setNoArtworksFound] = useState(false);\n  // const [keyword, setKeyword] = useState(\"\");\n  // const [artworks, setArtworks] = useState([]);\n  //\n  // const onChangeKeyword = (event) => {\n  //   setKeyword(event.target.value);\n  // };\n  //\n  // const onSearchFilms = async (event) => {\n  //   event.preventDefault();\n  //   setIsLoading(true);\n  //   const artworks = await searchFilms({ keyword });\n  //   console.log(`the-------------------> artworks`, artworks)\n  //   setArtworks(artworks);\n  //   setNoArtworksFound(!artworks || !artworks.length);\n  //   setIsLoading(false);\n  // };\n\n  return (\n    <Container fluid>\n      HELLO\n      {/*<Row className=\"mt-2 mb-2 justify-content-end\" noGutters>*/}\n      {/*  <Button variant=\"outline-danger\" onClick={onLogout}>*/}\n      {/*    Log out*/}\n      {/*  </Button>*/}\n      {/*</Row>*/}\n      {/*<Row noGutters>*/}\n      {/*  <h1>Welcome!</h1>*/}\n      {/*</Row>*/}\n      {/*<Row className=\"mt-2\" noGutters>*/}\n      {/*  <h6>*/}\n      {/*    Enter one or multiple keywords below to search for artworks in the Art*/}\n      {/*    Institute of Chicago.*/}\n      {/*  </h6>*/}\n      {/*</Row>*/}\n      {/*<Row noGutters>*/}\n      {/*  <Form className=\"w-100 mb-5\" onSubmit={onSearchFilms}>*/}\n      {/*    <InputGroup>*/}\n      {/*      <Form.Control*/}\n      {/*        type=\"text\"*/}\n      {/*        placeholder=\"e.g. Monet, O'Keeffe, Ancient Greek...\"*/}\n      {/*        onChange={onChangeKeyword}*/}\n      {/*        value={keyword}*/}\n      {/*      />*/}\n      {/*      <InputGroup.Prepend>*/}\n      {/*        <Button*/}\n      {/*          variant=\"outline-primary\"*/}\n      {/*          disabled={!keyword}*/}\n      {/*          type=\"submit\"*/}\n      {/*        >*/}\n      {/*          Search artworks*/}\n      {/*        </Button>*/}\n      {/*      </InputGroup.Prepend>*/}\n      {/*    </InputGroup>*/}\n      {/*  </Form>*/}\n      {/*</Row>*/}\n      {/*{isLoading && (*/}\n      {/*  <Row className=\"justify-content-center mb-5\">*/}\n      {/*    <Spinner animation=\"border\" variant=\"primary\" />*/}\n      {/*  </Row>*/}\n      {/*)}*/}\n      {/*{noArtworksFound && !isLoading ? (*/}\n      {/*  <Alert variant={\"info\"}>*/}\n      {/*    No results were found for the entered keyword/s.*/}\n      {/*  </Alert>*/}\n      {/*) : (*/}\n      {/*  <CardColumns>*/}\n      {/*    {artworks.map((artwork, idx) => {*/}\n      {/*      const {*/}\n      {/*        id,*/}\n      {/*        title,*/}\n      {/*        image_url,*/}\n      {/*        artist_display,*/}\n      {/*        date_display,*/}\n      {/*        medium_display,*/}\n      {/*        place_of_origin,*/}\n      {/*      } = artwork;*/}\n      {/*      return (*/}\n      {/*        <Card key={`artwork-${id}`}>*/}\n      {/*          <a*/}\n      {/*            href={image_url}*/}\n      {/*            target=\"_blank\"*/}\n      {/*            rel=\"noreferrer\"*/}\n      {/*            aria-current=\"true\"*/}\n      {/*          >*/}\n      {/*            <Card.Img variant=\"top\" src={image_url} />*/}\n      {/*          </a>*/}\n      {/*          <Card.Body>*/}\n      {/*            <Card.Title>{title}</Card.Title>*/}\n      {/*            <Card.Text*/}\n      {/*              className=\"text-muted\"*/}\n      {/*              style={{ whiteSpace: \"pre-line\" }}*/}\n      {/*            >*/}\n      {/*              {place_of_origin}, {date_display}*/}\n      {/*              <br />*/}\n      {/*              <small className=\"text-muted\">{artist_display}</small>*/}\n      {/*            </Card.Text>*/}\n      {/*            <Card.Text>*/}\n      {/*              <small className=\"text-muted\">{medium_display}</small>*/}\n      {/*            </Card.Text>*/}\n      {/*          </Card.Body>*/}\n      {/*        </Card>*/}\n      {/*      );*/}\n      {/*    })}*/}\n      {/*  </CardColumns>*/}\n      {/*)}*/}\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import React, { useEffect, useState } from \"react\";\nimport Login from \"./components/login\";\nimport Homepage from \"./components/homepage\";\n\nfunction App() {\n  const [isUserSignedIn, setIsUserSignedIn] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) setIsUserSignedIn(true);\n    else setIsUserSignedIn(false);\n  }, []);\n\n  const onLoginSuccessful = () => {\n    setIsUserSignedIn(true);\n  };\n\n  const onLogout = () => {\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"token\");\n    setIsUserSignedIn(false);\n  };\n\n  return (\n    (isUserSignedIn && <Homepage onLogout={onLogout} />) || (\n      <Login onLoginSuccessful={onLoginSuccessful} />\n    )\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}